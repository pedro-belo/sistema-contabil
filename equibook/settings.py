"""
Django settings for equibook project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY", default=get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
USE_DEV_APPS = config("USE_DEV_APPS", cast=bool, default=False)
DEBUG = config("DEBUG", cast=bool, default=False)

ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv(), default="127.0.0.1, localhost")

CSRF_TRUSTED_ORIGINS = config("CSRF_TRUSTED_ORIGINS", cast=Csv(), default="http://127.0.0.1, http://localhost")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "equibook.users",
    "equibook.core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


if USE_DEV_APPS and DEBUG:
    # DEBUG_TOOLBAR
    INSTALLED_APPS.append("debug_toolbar")
    MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")
    INTERNAL_IPS = [
        "127.0.0.1",
    ]

    # DJANGO EXTENSIONS
    INSTALLED_APPS.append("django_extensions")


ROOT_URLCONF = "equibook.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "equibook.core.context_processors.app_settings",
            ],
        },
    },
]

WSGI_APPLICATION = "equibook.wsgi.application"

AUTH_USER_MODEL = "users.User"

LOGIN_REDIRECT_URL = "core:balance-accounts"

LOGIN_URL = "users:login"
LOGOUT_REDIRECT_URL = LOGIN_URL

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


USE_POSTGRES = config("USE_POSTGRES", cast=bool, default=False)

DB_SQLITE = {
    "ENGINE": "django.db.backends.sqlite3",
    "NAME": BASE_DIR / "db.sqlite3",
}

DB_POSTGRES = {
    "ENGINE": "django.db.backends.postgresql",
    "NAME": config("PG_NAME", default=""),
    "USER": config("PG_USER", default=""),
    "PASSWORD": config("PG_PASSWORD", default=""),
    "HOST": config("PG_HOST", default="127.0.0.1"),
    "PORT": config("PG_PORT", default=5432),
}


DATABASES = {"default": DB_POSTGRES if USE_POSTGRES else DB_SQLITE}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = config("STATIC_URL", default="static/")
STATIC_ROOT = config("STATIC_ROOT", default="static/")

MEDIA_URL = config("MEDIA_URL", default="")
MEDIA_ROOT = config("MEDIA_ROOT", default="media/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CACHE

CACHE_BACKEND = config(
    "CACHE_BACKEND", default="django.core.cache.backends.dummy.DummyCache"
)
CACHE_LOCATION = config("CACHE_LOCATION", default="")

CACHE_DEFAULT = (
    {
        "BACKEND": CACHE_BACKEND,
        "LOCATION": CACHE_LOCATION,
    }
    if CACHE_BACKEND and CACHE_LOCATION
    else {
        "BACKEND": CACHE_BACKEND,
    }
)

CACHES = {"default": CACHE_DEFAULT}
